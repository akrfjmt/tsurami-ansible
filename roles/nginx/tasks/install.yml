---
- name: Install nginx dependency packages
  apt:
    name: "{{ item }}"
    state: present
  with_items: "{{ NGINX_DEPENDENCY_PACKAGES_APT }}"

- include: ../../common/tasks/create_nginx_user.yml

- name: Create nginx temp directory
  file:
    path: "{{ NGINX_TEMP_DIR }}"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Create nginx log directory
  file:
    path: "{{ NGINX_LOG_DIR }}"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Copy nginx tarball
  copy:
    src: "{{ NGINX_VERSION }}.tar.gz"
    dest: "{{ SRC_DIR }}"
    owner: root
    group: root
    mode: "0644"

- name: Decompress nginx tarball
  unarchive:
    src: "{{ SRC_DIR }}/{{ NGINX_VERSION }}.tar.gz"
    remote_src: yes
    dest: "{{ SRC_DIR }}"
    group: root
    owner: root
    mode: "0755"

- name: Check nginx compilation flangs
  template:
    src: .nginx_compilation_flags.j2
    dest: "{{ NGINX_SRC_DIR }}/.nginx_compilation_flags"
  register: nginx_compilation_flags

- name: Run nginx configure script
  command: "./configure {{ NGINX_CONFIGURE_OPTIONS | join(' ') }}"
  args:
    chdir: "{{ NGINX_SRC_DIR }}"
  when: nginx_compilation_flags.changed

- name: Build nginx
  make:
    chdir: "{{ NGINX_SRC_DIR }}"
    target: build
  register: nginx_build

- name: Install nginx
  make:
    chdir: "{{ NGINX_SRC_DIR }}"
    target: install
  when: nginx_build.changed
  notify: restart nginx

- name: Set nginx symbolic link
  file:
    src: /usr/local/nginx/sbin/nginx
    dest: /usr/sbin/nginx
    owner: root
    group: root
    state: link

- name: Copy nginx systemd script
  copy:
    src: nginx.service
    dest: /lib/systemd/system
    owner: root
    group: root
    mode: 644
